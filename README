Модуль ядра Linux Simple Block Device

Содержит минимум кода для создания самого примитивного блочного устройства.
Функции:

Совместимо с ядром Linux от 5.10 до 6.11.
Позволяет создавать блочные устройства на основе bio и запросов.
Позволяет создавать несколько блочных устройств.

Как использовать:

Установить заголовки ядра и компилятор deb: apt install linux-haders gcc make или apt install dkms rpm: yum install kernel-headers

Компилировать модуль cd ${HOME}/sblkdev; ./mk.sh build

Установить в текущую систему cd ${HOME}/sblkdev; ./mk.sh install

Загрузить модуль modprobe sblkdev catalog="sblkdev1,2048;sblkdev2,4096"

Выгрузить modprobe -r sblkdev

Удалить модуль cd ${HOME}/sblkdev; ./mk.sh uninstall



Вообще-то любое блочное устройство в UNIX (и в Linux, в частности) представляется как последовательность байтов (raw, сырое представление) — например:
/dev/sda. Именно такое представление и должен обеспечить модуль-драйвер блочного устройства.

Позже на последовательность байтов, созданную драйвером блочного устройства, может быть наложена структура разделов (partition) в формате MBR (Master Boot Record) — программой fdisk или в новом, идущем ему на смену формате GPT (GUID Partition Table) — программами parted, gparted, gdisk). Далее на сам диск или любой его раздел может быть наложена структура любой из многих файловых систем, поддерживаемых Linux, что делается программами:
$ ls -w80 /sbin/mkfs*
/sbin/mkfs 		/sbin/mkfs.ext3 	/sbin/mkfs.gfs2 	/sbin/mkfs.ntfs
/sbin/mkfs.btrfs 	/sbin/mkfs.ext4 	/sbin/mkfs.hfsplus 	/sbin/mkfs.reiserfs
/sbin/mkfs.cramfs 	/sbin/mkfs.ext4dev 	/sbin/mkfs.minix 	/sbin/mkfs.vfat
/sbin/mkfs.ext2 	/sbin/mkfs.fat 	/sbin/mkfs.msdos 	/sbin/mkfs.xfs 

Здесь обратим внимание на то, что все многочисленные приведенные в таком выводе программы (*disk, mkfs* и др.) являются процессами пользовательского адресного пространства и никакого отношения к ядру (и модулям ядра) уже не имеют. Задача модуля блочного устройства заключается только в создании сырого устройства /dev/xxx, позволяющего выполнять на нем блочные операции. В этом состоит еще одно отличие блочных устройств (от символьных устройств): после загрузки модуля поддержки устройства нужно еще произвести достаточно много манипуляций пользовательскими программами, чтобы выполнить подготовку файловой структуры устройства и сделать его пригодным для использования.

